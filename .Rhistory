1   F   placebo   10.1   6.9   -3.2
2   F   placebo    6.3   4.2   -2.1')
xx <- read.table(header=T, text='
subject sex condition before after change
1   F   placebo   10.1   6.9   -3.2
2   F   placebo    6.3   4.2   -2.1
3   M   aspirin   12.4   6.3   -6.1
4   F   placebo    8.1   6.1   -2.0
5   M   aspirin   15.2   9.9   -5.3
6   F   aspirin   10.9   7.0   -3.9
7   F   aspirin   11.6   8.5   -3.1
8   M   aspirin    9.5   3.0   -6.5
9   F   placebo   11.5   9.0   -2.5
10   M   placebo   11.9  11.0   -0.9
11   F   aspirin   11.4   8.0   -3.4
12   M   aspirin   10.0   4.4   -5.6
13   M   aspirin   12.5   5.4   -7.1
14   M   placebo   10.6  10.6    0.0
15   M   aspirin    9.1   4.3   -4.8
16   F   placebo   12.1  10.2   -1.9
17   F   placebo   11.0   8.8   -2.2
18   F   placebo   11.9  10.2   -1.7
19   M   aspirin    9.1   3.6   -5.5
20   M   placebo   13.5  12.4   -1.1
21   M   aspirin   12.0   7.5   -4.5
22   F   placebo    9.1   7.6   -1.5
23   M   placebo    9.9   8.0   -1.9
24   F   placebo    7.6   5.2   -2.4
25   F   placebo   11.8   9.7   -2.1
26   F   placebo   11.8  10.7   -1.1
27   F   aspirin   10.1   7.9   -2.2
28   M   aspirin   11.6   8.3   -3.3
29   F   aspirin   11.3   6.8   -4.5
30   F   placebo   10.3   8.3   -2.0
')
xx
cdata <- ddply(data, c("sex", "condition"), summarise,               N    = length(change),
mean = mean(change),
sd   = sd(change),
se   = sd / sqrt(N) )
cdata <- ddply(xx, c("sex", "condition"), summarise,               N    = length(change),
mean = mean(change),
sd   = sd(change),
se   = sd / sqrt(N) )
cdata
str(xx)
str(data)
xx <- read.table(header=T, text='
subject sex condition before after change
1   F   placebo   10.1   6.9   -3.2
2   F   placebo    6.3   4.2   -2.1')
ddply(data,"date", summarize, mean=mean(interva;), )
ddply(data,"date", summarize, mean=mean(interval), )
ddply(data,"date", summarize, mean=mean(interval) )
ddply(data,"date", summarize, mean=mean(steps) )
ddply(data,"date", sum  )
ddply(data,"date", sum(steps)  )
ddply(data,"date", summarize, N=sum(steps)  )
stepPerDay <- ddply(data,"date", summarize, N=sum(!is.na(steps))  )
stepPerDay
stepPerDay <- ddply(data,"date", summarize, N=sum(steps)  )
stepPerDay
stepPerDay <- ddply(data,"date", summarize, N=sum(steps, na.rm=TRUE )  )
stepPerDay
stepsByDay <- ddply(data,"date", summarize, N=sum(steps, na.rm=TRUE )  )
rm(stepPerDay)
rm(xx)
rm(cdata)
stepsByDay <- ddply(data,"date", summarize, total=sum(steps, na.rm=TRUE ))
summary(stepsByDay$total)
mean(stepsByDay$total)
hist(stepsByDay$total)
hist(stepsByDay)
hist(stepsByDay$total)
random.dates <- as.Date("2001/1/1") + 70*stats::runif(100)
hist(random.dates, "weeks", format = "%d %b")
random.dates
View(stepsByDay)
with(stepsByDay, plot(date,total, type=h))
hist(stepsByDay$total)
with(stepsByDay, hist(total)
)
hist(stepsByDay$total)
hist(stepsByDay$total, breaks=20)
stepsPD <- ddply(data,"date", summarize, total=sum(steps, na.rm=TRUE ))
remove stepsByDay
remove (stepsByDay)
stepsPD.mean = mean(stepsByDay$total)
stepsPD.mean = mean(stepsPD$total)
stepsPD.median = median(stepsPD$total)
hist(stepsPD$total, breaks=20)
hist(stepsAD$total, breaks=20)
stepsAD <- ddply(data,"interval", summarize, total=sum(steps, na.rm=TRUE ))
hist(stepsAD$total, breaks=20)
head stepsAD
head (stepsAD)
stepsAD <- ddply(data,"interval", summarize, avg=mean(steps, na.rm=TRUE ))
head (stepsAD)
with(stepsAD, plot( interval, avg, type=l ))
with(stepsAD, plot( interval, avg, type="l"" ))
)
)
)
)
x
with(stepsAD, plot( interval, avg))
plot( interval, avg, type="l"" ))
with(stepsAD, plot( interval, avg, type="l"" )))
plot( interval, avg, type="l"" ))
"))
with(stepsAD, plot( interval, avg, type="l" )))
plot( interval, avg, type="l" )
with(stepsAD, plot( interval, avg, type="l" ))
which.max(stepsAD$avg)
stepsAD$interval[which.max(stepsAD$avg)]
with(stepsAD, plot( interval, avg, type="l" ))
maxInterval <- stepsAD$interval[which.max(stepsAD$avg)]
maxSteps <- stepsAD$steps[maxInterval]
maxSteps <- stepsAD$steps[which.max(stepsAD$avg)]
which.max(stepsAD$avg)
maxInterval <- which.max(stepsAD$avg)
class(maxInterval)
stepsAD$interval[maxInterval]
maxI <- which.max(stepsAD$avg)
maxInterval <- stepsAD$interval[maxI]
maxSteps    <- stepsAD$steps[maxI]
maxSteps    <- stepsAD$avg[maxI]
n_NA = sum(is.NA(data$steps))
n_NA = sum(is.na(data$steps))
data.imputed <- data
View(stepsAD)
i=104
intervalIndex = which( stepsAD$interval == data[i]$interval )
data[i]$interval
data[i]
data[i,]
data[i]$interval
data[i,]$interval
intervalIndex = which( stepsAD$interval == data[i,]$interval )
data.imputed[i,]$steps <- stepsAD[intervalIndex,]$avg
data.imputed[i,]$steps
sum(is.na(data.imputed$steps))
for (i in length(data)) {
if (! is.na (data[i]$steps) {
intervalIndex <- which( stepsAD$interval == data[i,]$interval )
data.imputed[i,]$steps <- stepsAD[intervalIndex,]$avg
}
}
data.imputed <- data
for (i in length(data)) {
if (! is.na (data[i]$steps) {
if (! is.na (data[i]$steps)) {
intervalIndex <- which( stepsAD$interval == data[i,]$interval )
data.imputed[i,]$steps <- stepsAD[intervalIndex,]$avg
}
data.imputed <- data
for (i in length(data)) {
if (! is.na (data[i]$steps)) {
intervalIndex <- which( stepsAD$interval == data[i,]$interval )
data.imputed[i,]$steps <- stepsAD[intervalIndex,]$avg
}
}
i=104
if (! is.na (data[i]$steps)) iq = 7
if (! is.na (data[i,]$steps)) {
intervalIndex <- which( stepsAD$interval == data[i,]$interval )
data.imputed[i,]$steps <- stepsAD[intervalIndex,]$avg
}
data.imputed <- data
for (i in length(data)) {
if (! is.na (data[i,]$steps)) {
intervalIndex <- which( stepsAD$interval == data[i,]$interval )
data.imputed[i,]$steps <- stepsAD[intervalIndex,]$avg
}
}
sum(is.na(data.imputed$steps))
i=104
i=1
data.imputed <- data
sum(is.na(data.imputed$steps))
if (! is.na (data[i,]$steps)) { iq <- 9 }
iq <- 5
if (! is.na (data[i,]$steps)) { iq <- 9 }
data[1,]
if ( is.na (data[i,]$steps)) { iq <- 9 }
data.imputed <- data
for (i in length(data)) {
if ( is.na (data[i,]$steps)) {
intervalIndex <- which( stepsAD$interval == data[i,]$interval )
data.imputed[i,]$steps <- stepsAD[intervalIndex,]$avg
}
}
sum(is.na(data.imputed$steps))
data.imputed <- data
i
data[1,]
data[i,]
if ( is.na (data[i,]$steps)) {
intervalIndex <- which( stepsAD$interval == data[i,]$interval )
data.imputed[i,]$steps <- stepsAD[intervalIndex,]$avg
}
data[i,]$interval
which( stepsAD$interval == data[i,]$interval )
stepsAD[intervalIndex,]$avg
data.imputed[i,]$steps <- stepsAD[intervalIndex,]$avg
sum(is.na(data.imputed$steps))
i
i<-4
is.na (data[i,]$steps)
intervalIndex <- which( stepsAD$interval == data[i,]$interval )
data.imputed[i,]$steps <- stepsAD[intervalIndex,]$avg
data.imputed[i,]$steps
sum(is.na(data.imputed$steps))
length(data)
sum(is.na(data$steps))
length(data[,])
size(data)
attr(data)
dim(data)
dim(data)[1]
data.imputed <- data
for (i in dim(data)[1]) {
if ( is.na (data[i,]$steps)) {
intervalIndex <- which( stepsAD$interval == data[i,]$interval )
data.imputed[i,]$steps <- stepsAD[intervalIndex,]$avg
}
}
sum(is.na(data$steps))
sum(is.na(data.imputed$steps))
data.imputed[i,]
View(data.imputed)
data.imputed[1,]
i=1
is.na (data[i,]$steps))
is.na (data[i,]$steps)
intervalIndex <- which( stepsAD$interval == data[i,]$interval )
data.imputed[i,]$steps <- stepsAD[intervalIndex,]$avg
data.imputed[i,]$steps
View(data.imputed)
dim(data)[1]
for (i in dim(data)[1]) {
if ( is.na (data[i,]$steps)) {
intervalIndex <- which( stepsAD$interval == data[i,]$interval )
data.imputed[i,]$steps <- stepsAD[intervalIndex,]$avg
}
}
View(data.imputed)
print i
print(i)
data.imputed <- data
for (i in dim(data)[1]) {
if ( is.na (data[i,]$steps)) {
intervalIndex <- which( stepsAD$interval == data[i,]$interval )
data.imputed[i,]$steps <- stepsAD[intervalIndex,]$avg
i
sum(is.na(data.imputed$steps))
}
}
for (i in 1:dim(data)[1]) {
if ( is.na (data[i,]$steps)) {
intervalIndex <- which( stepsAD$interval == data[i,]$interval )
data.imputed[i,]$steps <- stepsAD[intervalIndex,]$avg
i
sum(is.na(data.imputed$steps))
}
}
sum(is.na(data.imputed$steps))
data.imputed <- data
for (i in 1:dim(data)[1]) {
if ( is.na (data[i,]$steps)) {
intervalIndex <- which( stepsAD$interval == data[i,]$interval )
data.imputed[i,]$steps <- stepsAD[intervalIndex,]$avg
}
}
stepsPD.imputed <- ddply(data,"date", summarize, total=sum(steps, na.rm=TRUE ))
hist(stepsPD.imputed$total, breaks=20)
stepsPD.imputed.avg <- mean(stepsPD$total)
stepsPD.imputed.med <- median(stepsPD$total)
stepsPD.imputed.avg <- mean(stepsPD.imputed$total)
stepsPD.imputed.med <- median(stepsPD.imputed$total)
stepsPD.imputed <- ddply(data.imputed,"date", summarize, total=sum(steps))
hist(stepsPD.imputed$total, breaks=20)
stepsPD.imputed.avg <- mean(stepsPD.imputed$total)
stepsPD.imputed.med <- median(stepsPD.imputed$total)
View(stepsPD.imputed)
stepsPD.imputed.med <- median(stepsPD.imputed$total)
stepsPD.imputed$total
median(stepsPD.imputed$total)
stepsPD.imputed
tail(data)
tail(stapsPD.imputed)
tail(stepsPD.imputed)
stepsPD.imputed$total
stepsPD$total
stepsAD[1,]$avg
with(data[1:10], table(date,steps))
str(data)
xx <- head(data)
xx
xx <- head(data, n=1-)
xx <- head(data, n=10)
xx
table(xx$date, xx$steps)
xx <- head(data, n=1000)
table(xx$date, xx$steps)
table(xx$date, xx$interval)
xx <- data[1:1000,]
str(xx)
xx <- data[1:100,]
str(xx)
xx <- data
data <- data[1:100]
data <- data[1:100,]
stepsPD <- ddply(data,"date", summarize, total=sum(steps, na.rm=TRUE ))
hist(stepsPD$total, breaks=20)
stepsPD.avg <- mean(stepsPD$total)
stepsPD.med <- median(stepsPD$total)
View(data)
data <- xx[1:1000,]
stepsPD <- ddply(data,"date", summarize, total=sum(steps, na.rm=TRUE ))
hist(stepsPD$total, breaks=20)
stepsPD.avg <- mean(stepsPD$total)
stepsPD.med <- median(stepsPD$total)
stepsAD <- ddply(data,"interval", summarize, avg=mean(steps, na.rm=TRUE ))
with(stepsAD, plot( interval, avg, type="l" ))
data.imputed <- data
for (i in 1:dim(data)[1]) {
if ( is.na (data[i,]$steps)) {
intervalIndex <- which( stepsAD$interval == data[i,]$interval )
data.imputed[i,]$steps <- stepsAD[intervalIndex,]$avg
}
}
data.imputed <- data
for (i in 1:dim(data)[1]) {
if ( is.na (data[i,]$steps)) {
intervalIndex <- which( stepsAD$interval == data[i,]$interval )
data.imputed[i,]$steps <- stepsAD[intervalIndex,]$avg
}
}
stepsPD.imputed <- ddply(data.imputed,"date", summarize, total=sum(steps))
hist(stepsPD.imputed$total, breaks=20)
stepsPD.imputed.avg <- mean(stepsPD.imputed$total)
stepsPD.imputed.med <- median(stepsPD.imputed$total)
data <- read.csv("activity.csv", colClasses =c("numeric", "factor", "numeric"
,na.strings = "NA")
data <- read.csv("activity.csv", colClasses =c("numeric", "factor", "numeric"
data <- read.csv("activity.csv", colClasses =c("numeric", "factor", "numeric")
,na.strings = "NA")
stepsPD <- ddply(data,"date", summarize, total=sum(steps, na.rm=TRUE ))
hist(stepsPD$total, breaks=20)
stepsPD.avg <- mean(stepsPD$total)
stepsPD.med <- median(stepsPD$total)
stepsAD <- ddply(data,"interval", summarize, avg=mean(steps, na.rm=TRUE ))
with(stepsAD, plot( interval, avg, type="l" ))
maxI <- which.max(stepsAD$avg)
maxInterval <- stepsAD$interval[maxI]
maxSteps    <- stepsAD$avg[maxI]
n_NA = sum(is.na(data$steps))
data.imputed <- data
for (i in 1:dim(data)[1]) {
if ( is.na (data[i,]$steps)) {
intervalIndex <- which( stepsAD$interval == data[i,]$interval )
data.imputed[i,]$steps <- stepsAD[intervalIndex,]$avg
}
}
stepsPD.imputed <- ddply(data.imputed,"date", summarize, total=sum(steps))
hist(stepsPD.imputed$total, breaks=20)
stepsPD.imputed.avg <- mean(stepsPD.imputed$total)
stepsPD.imputed.med <- median(stepsPD.imputed$total)
xx <- data
data <- data[1:1000,]
stepsPD <- ddply(data,"date", summarize, total=sum(steps, na.rm=TRUE ))
hist(stepsPD$total, breaks=20)
stepsPD.avg <- mean(stepsPD$total)
stepsPD.med <- median(stepsPD$total)
stepsAD <- ddply(data,"interval", summarize, avg=mean(steps, na.rm=TRUE ))
with(stepsAD, plot( interval, avg, type="l" ))
maxI <- which.max(stepsAD$avg)
maxInterval <- stepsAD$interval[maxI]
maxSteps    <- stepsAD$avg[maxI]
n_NA = sum(is.na(data$steps))
data.imputed <- data
for (i in 1:dim(data)[1]) {
if ( is.na (data[i,]$steps)) {
intervalIndex <- which( stepsAD$interval == data[i,]$interval )
data.imputed[i,]$steps <- stepsAD[intervalIndex,]$avg
}
}
stepsPD.imputed <- ddply(data.imputed,"date", summarize, total=sum(steps))
hist(stepsPD.imputed$total, breaks=20)
stepsPD.imputed.avg <- mean(stepsPD.imputed$total)
stepsPD.imputed.med <- median(stepsPD.imputed$total)
with(stepsAD.imputed, plot( interval, avg, type="l" ))
data <- read.csv("activity.csv", colClasses =c("numeric", "factor", "numeric")
,na.strings = "NA")
library(plyr)
stepsPD <- ddply(data,"date", summarize, total=sum(steps, na.rm=TRUE ))
hist(stepsPD$total, breaks=20)
stepsPD.avg <- mean(stepsPD$total)
stepsPD.med <- median(stepsPD$total)
stepsAD <- ddply(data,"interval", summarize, avg=mean(steps, na.rm=TRUE ))
with(stepsAD, plot( interval, avg, type="l" ))
maxI <- which.max(stepsAD$avg)
maxInterval <- stepsAD$interval[maxI]
maxSteps    <- stepsAD$avg[maxI]
n_NA = sum(is.na(data$steps))
data.imputed <- data
for (i in 1:dim(data)[1]) {
if ( is.na (data[i,]$steps)) {
intervalIndex <- which( stepsAD$interval == data[i,]$interval )
data.imputed[i,]$steps <- stepsAD[intervalIndex,]$avg
}
}
stepsPD.imputed <- ddply(data.imputed,"date", summarize, total=sum(steps))
hist(stepsPD.imputed$total, breaks=20)
stepsPD.imputed.avg <- mean(stepsPD.imputed$total)
stepsPD.imputed.med <- median(stepsPD.imputed$total)
summary(stepsPD$total)
summary(stepsPD.imputed$total)
mean(stepsPD.imputed$total)
with(stepsPD, boxplot(date, steps))
with(stepsPD, boxplot(date, total))
with(stepsPD, boxplot(total,date))
stepsPD$total
stepsPD$date
boxplot(stepsPD$total)
boxplot(stepsPD$total ~ date)
class(stepsPD$total)
class(stepsPD$date)
xx<-data
xx$Rdate <-as.Date(xx$date)
class(xx$Rdate)
boxplot(xx)
boxplot(xx ~ Rdate)
boxplot(xx ~ xx$Rdate)
boxplot(xx$steps ~ xx$Rdate)
boxplot(count ~ spray, data = InsectSprays, col = "lightgray")
boxplot(count ~ spray, data = InsectSprays,
notch = TRUE, add = TRUE, col = "blue")
rb <- boxplot(decrease ~ treatment, data = OrchardSprays, col = "bisque")
title("Comparing boxplot()s and non-robust mean +/- SD")
stepsAD <- ddply(data.imputed,"interval", summarize, avg=mean(steps ))
with(stepsAD, plot( interval, avg, type="l" ))
n_NA = sum(is.na(data$steps))
data.imputed <- data
for (i in 1:dim(data)[1]) {
if ( is.na (data[i,]$steps)) {
intervalIndex <- which( stepsAD$interval == data[i,]$interval )
data.imputed[i,]$steps <- stepsAD[intervalIndex,]$avg
}
}
stepsPD.imputed <- ddply(data.imputed,"date", summarize, total=sum(steps))
hist(stepsPD.imputed$total, breaks=20)
stepsPD.imputed.avg <- mean(stepsPD.imputed$total)
stepsPD.imputed.med <- median(stepsPD.imputed$total)
stepsAD <- ddply(data.imputed,"interval", summarize, avg=mean(steps ))
with(stepsAD, plot( interval, avg, type="l" ))
round(1.1)
round(1.6)
data.imputed <- data
for (i in 1:dim(data)[1]) {
if ( is.na (data[i,]$steps)) {
intervalIndex <- which( stepsAD$interval == data[i,]$interval )
data.imputed[i,]$steps <- round(stepsAD[intervalIndex,]$avg)
}
}
stepsPD.imputed <- ddply(data.imputed,"date", summarize, total=sum(steps))
hist(stepsPD.imputed$total, breaks=20)
stepsPD.imputed.avg <- mean(stepsPD.imputed$total)
stepsPD.imputed.med <- median(stepsPD.imputed$total)
stepsAD <- ddply(data.imputed,"interval", summarize, avg=mean(steps ))
with(stepsAD, plot( interval, avg, type="l" ))
with(stepsAD.imputed, plot( interval, avg, type="l" ))
with(stepsAD.imputed, plot( interval, avg, type="l" ))
stepsAD <- ddply(data.imputed,"interval", summarize, avg=mean(steps ))
with(stepsAD.imputed, plot( interval, avg, type="l" ))
stepsAD.imputed <- ddply(data.imputed,"interval", summarize, avg=mean(steps ))
with(stepsAD.imputed, plot( interval, avg, type="l" ))
stepsAD <- ddply(data,"interval", summarize, avg=mean(steps, na.rm=TRUE ))
with(stepsAD, plot( interval, avg, type="l" ))
n_NA = sum(is.na(data$steps))
data.imputed <- data
for (i in 1:dim(data)[1]) {
if ( is.na (data[i,]$steps)) {
intervalIndex <- which( stepsAD$interval == data[i,]$interval )
data.imputed[i,]$steps <- round(stepsAD[intervalIndex,]$avg)+100
}
}
stepsPD.imputed <- ddply(data.imputed,"date", summarize, total=sum(steps))
hist(stepsPD.imputed$total, breaks=20)
stepsPD.imputed.avg <- mean(stepsPD.imputed$total)
stepsPD.imputed.med <- median(stepsPD.imputed$total)
stepsAD.imputed <- ddply(data.imputed,"interval", summarize, avg=mean(steps ))
with(stepsAD.imputed, plot( interval, avg, type="l" ))
data.imputed[i,]$steps <- round(stepsAD[intervalIndex,]$avg)
n_NA = sum(is.na(data$steps))
data.imputed <- data
for (i in 1:dim(data)[1]) {
if ( is.na (data[i,]$steps)) {
intervalIndex <- which( stepsAD$interval == data[i,]$interval )
data.imputed[i,]$steps <- round(stepsAD[intervalIndex,]$avg)
}
}
stepsPD.imputed <- ddply(data.imputed,"date", summarize, total=sum(steps))
hist(stepsPD.imputed$total, breaks=20)
stepsPD.imputed.avg <- mean(stepsPD.imputed$total)
stepsPD.imputed.med <- median(stepsPD.imputed$total)
stepsAD.imputed <- ddply(data.imputed,"interval", summarize, avg=mean(steps ))
with(stepsAD.imputed, plot( interval, avg, type="l" ))
stepsAD.imputed$diff <- stepsAD.imputed$avg - stepsAD$avg
with(stepsAD.imputed, plot( interval, diff, type="l" ))
with(stepsAD.imputed, plot( interval, avg, type="l" ))
